Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.21 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.21 secs
 
--> Reading design: mips.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "mips.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "mips"
Output Format                      : NGC
Target Device                      : xa3s50-4-vqg100

---- Source Options
Top Module Name                    : mips
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : Yes
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : Yes
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Multiplier Style                   : Auto
Automatic Register Balancing       : No

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 8
Register Duplication               : YES
Slice Packing                      : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Yes
Use Synchronous Set                : Yes
Use Synchronous Reset              : Yes
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
Verilog 2001                       : YES
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "W_REG.v" in library work
Compiling verilog file "STALL.v" in library work
Compiling verilog include file "InStrType.v"
Module <W_REG> compiled
Compiling verilog file "NPC.v" in library work
Compiling verilog include file "InStrType.v"
Module <STALL> compiled
Compiling verilog file "M_REG.v" in library work
Module <NPC> compiled
Compiling verilog file "MUDI.v" in library work
Compiling verilog include file "InStrType.v"
Module <M_REG> compiled
Compiling verilog file "MCHECK.v" in library work
Compiling verilog include file "InStrType.v"
Compiling verilog include file "ExcType.v"
Module <MUDI> compiled
Compiling verilog file "IFU.v" in library work
Module <MCHECK> compiled
Compiling verilog file "GRF.v" in library work
Module <IFU> compiled
Compiling verilog file "E_REG.v" in library work
Module <GRF> compiled
Compiling verilog file "EXT.v" in library work
Module <E_REG> compiled
Compiling verilog file "D_REG.v" in library work
Compiling verilog include file "InStrType.v"
Module <EXT> compiled
Compiling verilog file "DM.v" in library work
Compiling verilog include file "InStrType.v"
Module <D_REG> compiled
Compiling verilog file "CP0.v" in library work
Compiling verilog include file "InStrType.v"
Compiling verilog include file "ExcType.v"
Module <DM> compiled
Compiling verilog file "Controller.v" in library work
Compiling verilog include file "InStrType.v"
Compiling verilog include file "ExcType.v"
Module <CP0> compiled
Compiling verilog file "CMP.v" in library work
Compiling verilog include file "InStrType.v"
Module <Controller> compiled
Compiling verilog file "ALU.v" in library work
Compiling verilog include file "InStrType.v"
Compiling verilog include file "ExcType.v"
Module <CMP> compiled
Compiling verilog file "TIMER.v" in library work
Module <ALU> compiled
Compiling verilog file "CPU.v" in library work
Compiling verilog include file "InStrType.v"
Module <TC> compiled
Compiling verilog file "BRIDGE.v" in library work
Module <CPU> compiled
Compiling verilog file "mips.v" in library work
Compiling verilog include file "InStrType.v"
Module <BRIDGE> compiled
Module <mips> compiled
No errors in compilation
Analysis of file <"mips.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <mips> in library <work>.

Analyzing hierarchy for module <CPU> in library <work>.

Analyzing hierarchy for module <BRIDGE> in library <work>.

Analyzing hierarchy for module <TC> in library <work>.

Analyzing hierarchy for module <IFU> in library <work>.

Analyzing hierarchy for module <NPC> in library <work>.

Analyzing hierarchy for module <D_REG> in library <work>.

Analyzing hierarchy for module <Controller> in library <work>.

Analyzing hierarchy for module <EXT> in library <work>.

Analyzing hierarchy for module <GRF> in library <work>.

Analyzing hierarchy for module <CMP> in library <work>.

Analyzing hierarchy for module <E_REG> in library <work>.

Analyzing hierarchy for module <ALU> in library <work>.

Analyzing hierarchy for module <MUDI> in library <work>.

Analyzing hierarchy for module <M_REG> in library <work>.

Analyzing hierarchy for module <MCHECK> in library <work>.

Analyzing hierarchy for module <CP0> in library <work>.

Analyzing hierarchy for module <DM> in library <work>.

Analyzing hierarchy for module <W_REG> in library <work>.

Analyzing hierarchy for module <STALL> in library <work>.


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <mips>.
Module <mips> is correct for synthesis.
 
Analyzing module <CPU> in library <work>.
Module <CPU> is correct for synthesis.
 
Analyzing module <IFU> in library <work>.
Module <IFU> is correct for synthesis.
 
Analyzing module <NPC> in library <work>.
Module <NPC> is correct for synthesis.
 
Analyzing module <D_REG> in library <work>.
Module <D_REG> is correct for synthesis.
 
Analyzing module <Controller> in library <work>.
Module <Controller> is correct for synthesis.
 
Analyzing module <EXT> in library <work>.
Module <EXT> is correct for synthesis.
 
Analyzing module <GRF> in library <work>.
Module <GRF> is correct for synthesis.
 
Analyzing module <CMP> in library <work>.
Module <CMP> is correct for synthesis.
 
Analyzing module <E_REG> in library <work>.
Module <E_REG> is correct for synthesis.
 
Analyzing module <ALU> in library <work>.
Module <ALU> is correct for synthesis.
 
Analyzing module <MUDI> in library <work>.
ERROR:Xst:870 - "MUDI.v" line 45: Can not simplify operator MOD.
 
Found 1 error(s). Aborting synthesis.
--> 

Total memory usage is 4514172 kilobytes

Number of errors   :    1 (   0 filtered)
Number of warnings :    0 (   0 filtered)
Number of infos    :    0 (   0 filtered)

